name: pipeline
on: push
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: pex
  REGION: us-central1
jobs:
  test:
    name: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.1
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          version: 1.1.4
          virtualenvs-create: false
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} --build-arg COMMIT_SHA=${{  github.sha }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.2.0
        with:
          service: ${{ env.SERVICE }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
          region: ${{ env.REGION }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}